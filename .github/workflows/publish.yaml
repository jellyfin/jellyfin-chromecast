name: Publish

on:
    push:
        branches:
            - master
        tags:
            - '*'
    pull_request:
        branches:
            - master

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

            - name: Setup node env
              uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
              with:
                  node-version: 20

            - name: Install dependencies
              run: npm ci --no-audit

            - name: Update version in package.json
              run: |
                  PACKAGE_JSON=$(jq --indent 4 ".version += \"-$GITHUB_SHA\"" package.json)
                  echo $PACKAGE_JSON > package.json

            - name: Build
              run: npm run build

            - name: Prepare artifacts
              run: |
                  test -d dist
                  mv dist jellyfin-chromecast
                  zip -r "jellyfin-chromecast.zip" "jellyfin-chromecast"

            - name: Upload artifacts
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
              with:
                  name: jellyfin-chromecast
                  path: jellyfin-chromecast.zip
                  if-no-files-found: error

    publish:
        name: Publish
        runs-on: ubuntu-latest
        if: ${{ contains(github.repository_owner, 'jellyfin') && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')) }}
        needs: [build]

        steps:
            - name: Set JELLYFIN_VERSION to git tag
              if: ${{ startsWith(github.ref, 'refs/tags') }}
              run: echo "JELLYFIN_VERSION=$(echo ${GITHUB_REF#refs/tags/v} | tr / -)" >> $GITHUB_ENV

            - name: Set JELLYFIN_VERSION to unstable
              if: ${{ github.ref == 'refs/heads/master' }}
              run: echo "JELLYFIN_VERSION=unstable" >> $GITHUB_ENV

            - name: Download artifact
              uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
              with:
                  name: jellyfin-chromecast

            - name: Upload release archive to GitHub release
              if: ${{ startsWith(github.ref, 'refs/tags') }}
              uses: alexellis/upload-assets@13926a61cdb2cb35f5fdef1c06b8b591523236d3 # 0.4.1
              env:
                  GITHUB_TOKEN: ${{ secrets.JF_BOT_TOKEN }}
              with:
                  asset_paths: '["jellyfin-chromecast.zip"]'

            - name: Upload release archive to repo.jellyfin.org
              uses: burnett01/rsync-deployments@3cccb6851148e6198ed9ed89eb0d1c17b5e58cc7 # 7.0.2
              with:
                  switches: -vrptz
                  path: jellyfin-chromecast.zip
                  remote_path: /srv/incoming/chromecast/${{ env.JELLYFIN_VERSION }}/
                  remote_host: ${{ secrets.REPO_HOST }}
                  remote_user: ${{ secrets.REPO_USER }}
                  remote_key: ${{ secrets.REPO_KEY }}

            - name: Update repo.jellyfin.org symlinks
              uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
              with:
                  host: ${{ secrets.REPO_HOST }}
                  username: ${{ secrets.REPO_USER }}
                  key: ${{ secrets.REPO_KEY }}
                  envs: JELLYFIN_VERSION
                  script_stop: true
                  script: |
                      if [ -d "/srv/repository/main/client/chromecast/versions/${{ env.JELLYFIN_VERSION }}" ] && [ -n "${{ env.JELLYFIN_VERSION }}" ]; then
                        sudo rm -r /srv/repository/main/client/chromecast/versions/${{ env.JELLYFIN_VERSION }};
                      fi
                      sudo mv /srv/incoming/chromecast/${{ env.JELLYFIN_VERSION }} /srv/repository/main/client/chromecast/versions/${{ env.JELLYFIN_VERSION }};
                      cd /srv/repository/main/client/chromecast;
                      sudo rm -rf *.zip;
                      sudo ln -s versions/${JELLYFIN_VERSION}/jellyfin-chromecast-${JELLYFIN_VERSION}.zip .;

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        if: ${{ contains(github.repository_owner, 'jellyfin') && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')) }}
        needs: [build]

        steps:
            - name: Download Artifact
              uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
              with:
                  name: jellyfin-chromecast

            - name: Unzip artifact
              run: unzip jellyfin-chromecast.zip -d .

            - name: Deploy to apps1.jellyfin.org/chromecast/nightly
              uses: burnett01/rsync-deployments@3cccb6851148e6198ed9ed89eb0d1c17b5e58cc7 # 7.0.2
              with:
                  switches: -vrptz
                  path: jellyfin-chromecast/
                  remote_path: /srv/chromecast/nightly/
                  remote_host: ${{ secrets.DEPLOY_CC_HOST }}
                  remote_user: ${{ secrets.DEPLOY_CC_USER }}
                  remote_key: ${{ secrets.DEPLOY_CC_KEY }}

            - name: Deploy to apps1.jellyfin.org/chromecast/stable
              if: ${{ startsWith(github.ref, 'refs/tags') }}
              uses: burnett01/rsync-deployments@3cccb6851148e6198ed9ed89eb0d1c17b5e58cc7 # 7.0.2
              with:
                  switches: -vrptz
                  path: jellyfin-chromecast/
                  remote_path: /srv/chromecast/stable/
                  remote_host: ${{ secrets.DEPLOY_CC_HOST }}
                  remote_user: ${{ secrets.DEPLOY_CC_USER }}
                  remote_key: ${{ secrets.DEPLOY_CC_KEY }}
